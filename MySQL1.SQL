CREATE TABLE DETALLE_CITACION (
  ID_DETALLE int NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ID_NOTIFICACION int NOT NULL UNIQUE,
  NO_CASO int NOT NULL UNIQUE,
  INCONSISTENCIA json NOT NULL,
  FECHA date NOT NULL,
  FECHAVenci date NOT NULL,
  DETALLES_CITACION json NOT NULL,
  correoAuditor varchar(50),
  nombreAuditor varchar(50),
  telAuditor varchar(20)
);

ALTER TABLE DETALLE_CITACION ADD CONSTRAINT FK_IDNOT_IDNoti 
FOREIGN KEY (`ID_NOTIFICACION`) REFERENCES NOTIF_INCONSISTENCIA (`IDNotificacion`);


CREATE VIEW ALL_NOTIF_FOR_DETALLE AS
select IDNotificacion,NONotificacion from notif_inconsistencia as n 
left join EMAILS_NOTIF as e on n.IDNotificacion = e.ID_NOTIF
left join DETALLE_CITACION as d on n.IDNotificacion = d.ID_NOTIFICACION
where e.ESTATUS = 'T' and d.ID_NOTIFICACION IS NULL;


CREATE TABLE EMAILS_DDC (
ID_EDDC int NOT NULL AUTO_INCREMENT PRIMARY KEY,
ID_DDC int NOT NULL UNIQUE,
HORA_REGISTRO datetime NOT NULL,
HORA_ENVIO datetime NOT NULL,
ESTATUS enum('T','F') DEFAULT 'F'
);

ALTER TABLE EMAILS_DDC ADD CONSTRAINT `FK_IDDDC_IDDDC` FOREIGN KEY (`ID_DDC`) 
REFERENCES DETALLE_CITACION (`ID_DETALLE`) ON DELETE CASCADE;


CREATE VIEW VW_VER_DDC
AS SELECT 
D.ID_DETALLE AS `ID`,
C.NOMBRE_CLIENTE AS `CLIENTE`,
C.EMAIL_CLIENTE AS `EMAIL CLIENTE`,
N.NONotificacion AS NOTIFICACION,
D.NO_CASO AS `NO. CASO`,
date_format(D.FECHA, '%d/%m/%Y') AS `FECHA`,
date_format(D.FECHAVenci, '%d/%m/%Y') AS `VENCIMIENTO`,
E.ESTATUS AS `CORREO` FROM  
DETALLE_CITACION AS D
JOIN NOTIF_INCONSISTENCIA AS N ON D.ID_NOTIFICACION = N.IDNotificacion
JOIN CLIENTES AS C ON N.IDCliente = C.ID_CLIENTE
JOIN EMAILS_DDC AS E ON D.ID_DETALLE = ID_DDC
ORDER BY CASE E.ESTATUS WHEN 'F' THEN 1 ELSE 2 END,D.FECHAVenci ASC;


CREATE VIEW ALL_DETALLES AS
SELECT D.ID_DETALLE,D.NO_CASO FROM DETALLE_CITACION AS D
LEFT JOIN EMAILS_DDC AS E ON D.ID_DETALLE = E.ID_DDC
WHERE E.ESTATUS = 'F';


DELIMITER $$
CREATE PROCEDURE SP_INSERTAR_DETALLE
(
IN INIDNOT INT,
IN INNOCAS INT,
IN ININCON JSON,
IN INFECHA DATE,
IN INDETALL JSON,
IN CORAUD varchar(50),
IN NOMAUD varchar(50),
IN TELAUD varchar(20)
) BEGIN

DECLARE INFECVEN DATE;

SELECT DIASLABORABLES(INFECHA,20) INTO INFECVEN;

IF EXISTS (SELECT * FROM NOTIF_INCONSISTENCIA WHERE IDNotificacion = INIDNOT) THEN

IF NOT EXISTS (SELECT * FROM DETALLE_CITACION WHERE NO_CASO = INNOCAS OR ID_NOTIFICACION = INIDNOT ) THEN

INSERT INTO DETALLE_CITACION(ID_NOTIFICACION,NO_CASO,INCONSISTENCIA,FECHA,FECHAVenci,DETALLES_CITACION,correoAuditor,nombreAuditor,telAuditor) 
VALUES(INIDNOT,INNOCAS,ININCON,INFECHA,INFECVEN,INDETALL,CORAUD,NOMAUD,TELAUD);

IF ROW_COUNT() > 0 THEN
SELECT 'DIC' AS MENSAJE;
ELSE SELECT 'EID' AS MENSAJE; END IF;

ELSE SELECT 'EDCE' AS MENSAJE; END IF;

ELSE SELECT 'EELS' AS MENSAJE; END IF;
END $$


CREATE PROCEDURE SP_DELETE_DDC
(IN IN_IDD INT,IN IN_NOC INT) BEGIN

IF EXISTS(SELECT * FROM DETALLE_CITACION WHERE ID_DETALLE = IN_IDD AND NO_CASO = IN_NOC) THEN
	
    DELETE FROM DETALLE_CITACION WHERE ID_DETALLE = IN_IDD;
    
    IF ROW_COUNT() > 0 THEN SELECT 'DEC' AS MENSAJE;
    ELSE SELECT 'EED' AS MENSAJE; END IF;   

ELSE SELECT 'EELS' AS MENSAJE; END IF;
END $$


CREATE PROCEDURE SP_INSERT_EMAIL_DDC
(
IN IN_NOCAS VARCHAR(30)
) BEGIN

DECLARE IN_IDD INT;

SELECT ID_DETALLE FROM DETALLE_CITACION WHERE NO_CASO = IN_NOCAS INTO IN_IDD;

IF NOT EXISTS (SELECT * FROM emails_ddc WHERE ID_DDC = IN_IDD) THEN
INSERT INTO EMAILS_DDC(ID_DDC,HORA_REGISTRO,HORA_ENVIO) VALUES(IN_IDD,now(),DATE_ADD(now(), INTERVAL 5 HOUR));
ELSE SELECT 'EELS' AS 'MENSAJE'; END IF;
END $$


CREATE PROCEDURE SENDMAIL_DDC(IN SEARCH INT) BEGIN
SELECT E.ID_DDC,C.NOMBRE_CLIENTE,C.EMAIL_CLIENTE,N.NONotificacion AS NOTIFICACION,D.INCONSISTENCIA AS INCONSISTENCIAS,D.FECHAVenci,D.DETALLES_CITACION AS ARCHIVOS
FROM EMAILS_DDC AS E
JOIN DETALLE_CITACION AS D ON E.ID_DDC = D.ID_DETALLE
JOIN NOTIF_INCONSISTENCIA AS N ON D.ID_NOTIFICACION = N.IDNotificacion
JOIN CLIENTES AS C ON N.IDCliente = C.ID_CLIENTE
WHERE E.ESTATUS = "F" AND D.ID_DETALLE = SEARCH;
END $$